{% extends 'base.html.twig' %}

{% block pageHeader %}
    <div>{{ template }}</div>
    <div class="page-header">
        <div class="container">
            <h2 class="color3">Utilisateurs</h2>
            <ul class="breadcrumb">
                <li class="color3">Gestion des profils</li>
            </ul>
        </div>
    </div>
{% endblock %}

{% block main %}
    <link rel="stylesheet" href="{{ asset('vendors/jquery-ui/themes/flick/jquery-ui.css') }}">
    <script src="{{ asset('vendors/jquery-ui/jquery-ui.min.js') }}" type=text/javascript></script>

    <link rel="stylesheet" href="{{ asset('vendors/tablesorter/dist/css/theme.default.min.css') }}"/>
    <link rel="stylesheet" href="{{ asset('vendors/tablesorter/dist/css/jquery.tablesorter.pager.min.css') }}"/>
    <link rel="stylesheet" href="{{ asset('vendors/tablesorter/dist/css/filter.formatter.min.css') }}">

    <script type="text/javascript" src="{{ asset('vendors/tablesorter/dist/js/jquery.tablesorter.min.js') }}"></script>
    <script type="text/javascript"
            src="{{ asset('vendors/tablesorter/dist/js/jquery.tablesorter.widgets.min.js') }}"></script>
    <script type="text/javascript"
            src="{{ asset('vendors/tablesorter/dist/js/extras/jquery.tablesorter.pager.min.js') }}"></script>
    <script type="text/javascript"
            src="{{ asset('vendors/tablesorter/dist/js/widgets/widget-output.min.js') }}"></script>
    <script src="{{ asset('vendors/tablesorter/dist/js/widgets/widget-filter-formatter-jui.min.js') }}"></script>

    <script>
        jQuery(document).ready(function () {
            $('.download').click(function (e) {
                e.preventDefault();
                let table = $(this).closest('.container').find('.tablesorter');
                table.trigger('outputTable');
            });
            $(".tablesorter")
                .tablesorter({
                    widthFixed: true,
                    widgets: ['zebra', 'filter', 'output'],
                    widgetOptions: {
                        output_delivery: 'd',
                        output_saveFileName: 'mytable.csv',
                        filter_reset: 'button.reset',
                        filter_formatter: {
                            /*'.inscrCol' : function($cell, indx) {
                                return $.tablesorter.filterFormatter.uiDatepicker( $cell, indx, {
                                    changeMonth : true,
                                    changeYear : true,
                                    dateFormat : 'yy/mm/dd',
                                    textFrom: 'Du : ',
                                    textTo: 'Au : '
                                });
                            }
                            '.inscrCol' : function($cell, indx) {
                                return $.tablesorter.filterFormatter.uiDateCompare( $cell, indx, {
                                    cellText : 'Date 1', // text added before the input
                                    compare : ['>=', '='], // search values greater/less than selected value; overrides exactMatch
                                    selected : 3,       // zero-based index of compare starting selected value
                                    changeMonth : true,
                                    changeYear : true,
                                    dateFormat : 'yy/mm/dd'
                                });
                            },
                            '.inscrCol2' : function($cell, indx) {
                                return $.tablesorter.filterFormatter.uiDateCompare( $cell, indx, {
                                    cellText : 'Date 2', // text added before the input
                                    compare : ['<=', '='], // search values greater/less than selected value; overrides exactMatch
                                    selected : 3,       // zero-based index of compare starting selected value
                                    changeMonth : true,
                                    changeYear : true,
                                    dateFormat : 'yy/mm/dd'
                                });
                            }*/
                        }
                    }
                })
                .tablesorterPager({
                    container: $("#pager"),
                    output: 'de {startRow} à {endRow} sur {totalRows} lignes',
                    size: 50
                });

            $('.selectAll').click(function (e) {
                e.preventDefault();
                $('tr:not(:visible) .selectUser').prop('checked', false);
                let select = $('tr:visible .selectUser:checked').length === 0;
                $('tr:visible .selectUser').prop('checked', select);
            });
            $('.actionEnLot').on('change', function() {
                let userIds = [];
                let mode = this.value;
                $('.selectUser:checked').each(function () {
                    let idUser = $(this).closest('.userLine').attr('data-userId');
                    userIds.push(idUser);
                });
                $('.modal').modal('toggle');
                $('.alertModal').hide();
                if(mode === 'delete'){
                    $('.alertDelete').show();
                }else if(mode === 'desact'){
                    $('.alertDesinscr').show();
                }else if(mode === 'react'){
                    $('.alertReact').show();
                }
                $('.nbCompte').text(userIds.length);
                if(userIds.length > 1){
                    $('.plurielCompte').text('s');
                }else{
                    $('.plurielCompte').text('');
                }

                $('.valideDesinscr').unbind('click').click(function () {
                    $.ajax({
                        type: "POST",
                        url: "{{ path('actionLotsUsers_ajax') }}",
                        data: {
                            userIds: userIds,
                            mode: mode
                        },
                        dataType: "json",
                        success: function (response) {
                            setTimeout(function () {
                                window.location.href = window.location.href;
                            }, 300);
                        }
                    });
                });
            });
            $('.cancelDesinscr').click(function () {
                $('.modal').modal('toggle');
            });

            /* on va mettre à jour les données du tableau en ajax pour optimiser */
            let usersIdArray = [];
            $('.userLine').each(function(){
                usersIdArray.push($(this).attr('data-userid'));
            });
            let partOfusersIdArray = chunkArray(usersIdArray, 200);

            treatUsersPart(0, partOfusersIdArray);
            function treatUsersPart(part, ids){
                $.ajax({
                    type: "POST",
                    url: "{{ path('updateUsersTab_ajax') }}",
                    data: {
                        userIds: ids[part]
                    },
                    dataType: "json",
                    success: function (response) {
                        for (let i=0; i<response['users'].length; i++){
                            let tabUser = response['users'][i];
                            let userId = tabUser['userid'];
                            let cohCell = $('.userLine[data-userid='+userId+'] .cohCell');

                            for (let j=0; j<tabUser['cohortes'].length; j++){
                                let coh = tabUser['cohortes'][j];
                                let link = '<a href="{{ path("itemUsers", {id: "cohid", type: "cohorte"}) }}">'+coh['nom']+'(roleNom)</a>';
                                link = link.replace("cohid", coh['id']);
                                link = link.replace("roleNom", coh['role']);
                                link = link.replace("Enseignant", 'Enseignant correcteur');
                                cohCell.html(link);
                            }

                        }
                        part++;
                        if(part<=ids.length-1){
                            treatUsersPart(part, ids);
                        }else{
                            $('thead tr [data-column="6"] .loader-backdrop').remove();
                            $('thead tr [data-column="6"] input').show();
                            $('.download').show();
                            $(".tablesorter").trigger('update');
                        }
                    }
                });
            }

            function chunkArray(myArray, chunk_size){
                let arrayLength = myArray.length;
                let tempArray = [];

                for (let index = 0; index < arrayLength; index += chunk_size) {
                    let myChunk = myArray.slice(index, index+chunk_size);
                    tempArray.push(myChunk);
                }

                return tempArray;
            }

            // masque la colonne cohorte au début
            let loader = '<div class="loader-backdrop">\n' +
            '    <div class="loader">\n' +
            '        <div class="ball-1"></div>\n' +
            '        <div class="ball-2"></div>\n' +
            '    </div>\n' +
            '</div>';
            $('thead tr [data-column="6"]').css({
                'position': 'relative'
            });
            $('thead tr [data-column="6"] input').hide().after(loader);
            $('.download').hide();
        });
    </script>
    <style>
        thead tr [data-column="6"] .loader-backdrop{
            position: absolute;
            height: auto;
            width: auto;
            top:20px;
            left: calc(50% - 15px);
            display: block !important;
        }
        thead tr [data-column="6"] .loader{
            width: 30px;
            height: 30px;
        }
    </style>
    <div class="container mt-20 mb-40">
        <div class="row">
            <div class="col-md-12">
                <table class="tablesorter ">
                    <thead>
                    <tr>
                        <th data-filter="false"></th>
                        <th>Id</th>
                        <th>Email</th>
                        <th>Prénom</th>
                        <th>Nom</th>
                        <th class="filter-select">Statut</th>
                        <th>Cohortes</th>
                        <th class="filter-select">Institut</th>
                        <th class="filter-select">Activé</th>
                        <th class="inscrCol">inscription</th>
                        <!--<th class="inscrCol2">inscription</th>-->
                    </tr>
                    </thead>
                    <tbody>
                    {% for myUser in myUsers %}
                        <tr class="userLine" data-userId="{{ myUser.id }}">
                            <td><input class="selectUser" type="checkbox"></td>
                            <td><a href="{{ path('user', {id:myUser.id }) }}">{{ myUser.id }}</a></td>
                            <td><a href="{{ path('user', {id:myUser.id }) }}">{{ myUser.email }}</a></td>
                            <td>{{ myUser.firstname }}</td>
                            <td>{{ myUser.lastname }}</td>
                            <td>{{ myUser.statut }}</td>
                            <td class="cohCell">

                            </td>
                            <td>{{ myUser.institut }}</td>
                            <td>
                                {% if myUser.enabled == 1 %}
                                    oui
                                {% else %}
                                    non
                                {% endif %}
                            </td>
                            <td>{{ myUser.createdAt|localizeddate('none', 'none', null, null, 'Y/LL/dd' ) }}</td>
                            <!--<td>{{ myUser.createdAt|localizeddate('none', 'none', null, null, 'Y/LL/dd' ) }}</td>-->
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                <div id="pager" class="pager">
                    <form>
                        <img src="{{ asset('vendors/tablesorter/dist/css/images/first.png') }}" class="first"/>
                        <img src="{{ asset('vendors/tablesorter/dist/css/images/prev.png') }}" class="prev"/>
                        <input type="text" class="pagedisplay"/>
                        <img src="{{ asset('vendors/tablesorter/dist/css/images/next.png') }}" class="next"/>
                        <img src="{{ asset('vendors/tablesorter/dist/css/images/last.png') }}" class="last"/>
                        <select class="pagesize">
                            <option value="10">10</option>
                            <option value="20">20</option>
                            <option value="30">30</option>
                            <option value="40">40</option>
                            <option value="all">Toutes les lignes</option>
                        </select>
                        <button class="download">Télécharger le CSV</button>
                        <button class="selectAll">Sélectionner tous</button>
                        <span>Avec les sélectionnés :</span>
                        <select class="actionEnLot">
                            <option value="default"></option>
                            <option value="desact">Désactiver les comptes</option>
                            <option value="react">Réactiver les comptes</option>
                            <option value="delete">Supprimer les sélectionnés</option>
                        </select>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span>
                </button>

                <div class="modal-body" data-contentModal="devoirDisplay" data-idItem=""
                     style="background:#aaa; background-size:cover">
                    <div class="row">
                        <div class="bginverse">
                            <div class="">
                                <div class="alert alertModal alertDelete alert-danger mb-10">
                                    <strong>Attention!</strong> Voulez-vous vraiment procéder à la suppression de <span class="nbCompte"></span> compte<span class="plurielCompte"></span> ?
                                </div>
                                <div class="alert alertModal alertDesinscr alert-danger mb-10">
                                    <strong>Attention!</strong> Voulez-vous vraiment procéder à la désactivation de <span class="nbCompte"></span> compte<span class="plurielCompte"></span> ?
                                </div>
                                <div class="alert alertModal alertReact alert-danger mb-10">
                                    <strong>Attention!</strong> Voulez-vous vraiment procéder à la réactivation de <span class="nbCompte"></span> compte<span class="plurielCompte"></span> ?
                                </div>

                                <div class="row mb-10" style="text-align: center">
                                    <div class="btn btn-sm btn-info mb-3 valideDesinscr">Valider</div>
                                    <div class="btn btn-sm btn-info mb-3 cancelDesinscr">Annuler</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}