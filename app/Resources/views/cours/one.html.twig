{% extends 'base.html.twig' %}
{% set
    hasResponsableMinRights = app.user.hasRole('ROLE_SUPER_ADMIN')
    or
    (app.user.statut == 'Responsable' and app.user.confirmedByAdmin)
%}

{% block title %}
    <title>
        {{ cours.discipline.nom }}
    </title>
{% endblock %}

{% block vueAdmin %}
    {% if isReferent or app.user.hasRole('ROLE_SUPER_ADMIN') or ((app.user.statut == 'Responsable' or app.user.statut == 'Formateur') and app.user.confirmedByAdmin) %}
        <li><a href="{{ path('oneCours', {id: cours.id, mode: 'admin'}) }}">Vue admin</a></li>
        <li><a href="{{ path('oneCours', {id: cours.id, mode: 'ens'}) }}">Vue enseignant correcteur</a></li>
        <li><a href="{{ path('oneCours', {id: cours.id, mode: 'etu'}) }}">Vue étudiant</a></li>
    {% endif %}
{% endblock %}

{% block pageHeader %}
    {% include "cours/filAriane.html.twig" %}
{% endblock %}

{% block main %}
    <style>
        .minHcontentDevoirRess{
            min-height: 130px;
        }
    </style>
    <script>
        var chrono;
        jQuery(document).ready(function () {
            var steps = $('[data-uploadSteps]').attr('data-uploadSteps');
            var upload_srcSteps = $('[data-uploadSrcSteps]').attr('data-uploadSrcSteps');
            var folderLocation = $('[data-folderUpload]').attr('data-folderUpload');
            var upload_course = $('[data-courseUpload]').attr('data-courseUpload');
            var idSection;

            $('.btnOpenDevoir').click(function () {
                var idItem = $(this).closest('[data-iditem]').attr('data-iditem');
                var myBtn = $(this);
                idSection = $(this).closest('.section').attr('data-idSection');


                $.ajax({
                    type: 'POST',
                    url: "{{ path('checkSessionTimeout_ajax') }}",
                    async: false,
                    dataType: "json",
                    data: {
                        id: idItem,
                        userId: $('[data-userId]').attr('data-userId')
                    },
                    success: function (data) {
                        setTimeout(function () {
                            window.location.href = window.location.href.replace(/[\?#].*|$/, "?idSection=" + idSection + "&idDevoirOpen=" + idItem);
                        }, 600000)
                    },
                    error: function (xhr, status, error) {
                        console.log('error checkSessionTimeout_ajax')
                    }
                });


                $.ajax({
                    type: 'POST',
                    url: "{{ path('getDevoir_ajax') }}",
                    async: false,
                    dataType: "json",
                    data: {
                        id: idItem,
                        userId: $('[data-userId]').attr('data-userId')
                    },
                    success: function (data) {
                        $('.modal').modal();
                        $('.modal .modal-body').hide();
                        var popup = $('.modal .modal-body[data-contentModal=devoirDisplay]');
                        popup.attr('data-idItem', $(this).closest('.courseElem').attr('data-idItem')).show();
                        popup.find('.popupDevoirNom').text(data['nom']);
                        popup.find('.popupDevoirDescription').html(data['description']);

                        if(data['duree'] == 0){
                            // si pas de durée, alors pas de durée
                            $('.beginDevoir, .masqueDevoir, .alert_duringDevoir, .alert_beforeDownload, .alert_afterTimeExpire, .chronometre').hide();
                            $('.alert_notime').show();
                            // On ajoute les liens vers les fichiers de sujets
                            $('.listeDevoirSujets').append(myBtn.closest('.conteneurLiensSujets').find('.listeSujets'));
                            $('.listeDevoirSujets .listeSujets *').removeClass('hidden');
                            $('.contentDevoirRess').addClass('minHcontentDevoirRess');
                        }else{
                            $('.alert_notime').hide();
                            $('.contentDevoirRess').removeClass('minHcontentDevoirRess');
                            var dureeH = parseInt(data['duree'] / 3600);
                            var dureeM = parseInt((data['duree'] % 3600) / 60);
                            if (dureeM < 10) {
                                dureeM = "0" + dureeM;
                            }

                            popup.find('.popupDevoirDuree').text(dureeH + 'h' + dureeM);

                            var dateD = toJSDate(data['dateDebut']['date']);
                            var dateF = toJSDate(data['dateFin']['date']);
                            var limitDate = toJSDate(data['dateFin']['date']);
                            limitDate.setHours(parseInt(limitDate.getHours() + parseInt(dureeH)));
                            limitDate.setMinutes(parseInt(limitDate.getMinutes() + parseInt(dureeM)));

                            // On ajoute les liens vers les fichiers de sujets
                            $('.listeDevoirSujets').append(myBtn.closest('.conteneurLiensSujets').find('.listeSujets'));
                            $('.listeDevoirSujets .listeSujets *').removeClass('hidden')
                            if(!$('.listeDevoirSujets .listeSujets').length){
                                $('.listeDevoirSujets').hide();
                            }

                            popup.find('.alert').hide();
                            if (data['copieStart'] == null) {
                                $('.beginDevoir, .masqueDevoir').show();
                                $('.alert_beforeDownload').show();
                                $('.chrono_h').text(dureeH);
                                $('.chrono_m').text(dureeM);
                                $('.chrono_s').text("00");

                                $('.beginDevoir').unbind('click').click(function () {
                                    var btn = $(this);
                                    if (!btn.hasClass('inactivate')) {
                                        btn.addClass('inactivate');
                                        // creation de l'objet Copie
                                        $.ajax({
                                            type: 'POST',
                                            url: "{{ path('startDevoir_ajax') }}",
                                            async: false,
                                            dataType: "json",
                                            data: {
                                                id: idItem,
                                                userId: $('[data-userId]').attr('data-userId')
                                            },
                                            success: function (data) {
                                                $('.masqueDevoir').hide();
                                                launchChrono();
                                            }
                                        });
                                    }
                                });
                            } else {
                                // le devoir avait déjà été commencé
                                $('.beginDevoir, .masqueDevoir').hide();
                                $('.alert_duringDevoir').show();
                                var timeLimit = toJSDate(data['copieStart']['date']);
                                timeLimit.setHours(timeLimit.getHours() + parseInt(dureeH));
                                timeLimit.setMinutes(timeLimit.getMinutes() + parseInt(dureeM));
                                var now_ = new Date();
                                var now = new Date(now_.getTime() - now_.getTimezoneOffset() * 60000);
                                if (now_ > timeLimit) {
                                    window.location.href = window.location.href.replace(/[\?#].*|$/, "?idSection=" + idSection);
                                } else {
                                    var diff = timeLimit.getTime() - now_.getTime();
                                    var diffSeconds = diff / 1000;
                                    var HH = parseInt(Math.floor(diffSeconds / 3600));
                                    var MM = parseInt(Math.floor(diffSeconds % 3600) / 60);
                                    $('.chrono_h').text(HH);
                                    $('.chrono_m').text(MM);
                                    $('.chrono_s').text("00");
                                    launchChrono();
                                }
                            }
                        }

                        var url = steps + folderLocation + $('[data-coursId]').attr('data-coursId') + '/devoir/' + idItem + '/copies/' + $('[data-userId]').attr('data-userId') + '/';

                        $.ajax({
                            type: 'POST',
                            url: "{{ path('checkDirForUploadFile_ajax') }}",
                            async: false,
                            dataType: "json",
                            data: {
                                url: url
                            },
                            success: function (data) {
                            },
                            error: function (xhr, status, error) {
                            }
                        });

                        $('#copieUpload').fileupload({
                            url: steps + upload_srcSteps + upload_course + folderLocation,
                            dropZone: null,
                            dataType: 'json',
                            add: function (e, data) {
                                var uploadErrors = [];
                                if (data.files[0]['size'] > 5000000) {
                                    uploadErrors.push('Fichier trop volumineux : ne pas dépasser 5MO');
                                }
                                if (uploadErrors.length > 0) {
                                    alert(uploadErrors.join("\n"));
                                } else {
                                    data.submit();
                                }
                            },
                            done: function (e, data) {
                                $.each(data.result.files, function (index, file) {
                                    var myUrlTab = file.url.split(folderLocation);
                                    $.ajax({
                                        type: 'POST',
                                        url: "{{ path('uploadCopieFile_ajax') }}",
                                        async: false,
                                        dataType: "json",
                                        data: {
                                            itemId: idItem,
                                            userId: $('[data-userId]').attr('data-userId'),
                                            url: steps + folderLocation + myUrlTab[1],
                                            urlDest: url,
                                            currentUrl: window.location.pathname
                                        },
                                        success: function (data) {
                                            $('.modal').modal('toggle');
                                            window.location.href = window.location.href.replace(/[\?#].*|$/, "?idSection=" + idSection);
                                        },
                                        error: function (xhr, status, error) {
                                            $('.modal').modal('toggle');
                                        }
                                    });
                                });

                            },
                            progressall: function (e, data) {
                                var progress = parseInt(data.loaded / data.total * 100, 10);
                                $('#itemProgress').find('.progress-bar').css(
                                    'width',
                                    progress + '%'
                                );
                            }
                        }).prop('disabled', !$.support.fileInput)
                            .parent().addClass($.support.fileInput ? undefined : 'disabled');
                    },
                    error: function (xhr, status, error) {
                        console.log('error upload devoir copie')
                    }
                });
            });
            $('.btnDeleteCopieEtu').click(function () {
                var idItem = $(this).closest('[data-iditem]').attr('data-iditem');
                $.ajax({
                    type: 'POST',
                    url: "{{ path('deleteCopieEtu_ajax') }}",
                    async: false,
                    dataType: "json",
                    data: {
                        itemId: idItem,
                        userId: $('[data-userId]').attr('data-userId')
                    },
                    success: function (data) {
                        window.location.href = window.location.href.replace(/[\?#].*|$/, "?idSection=" + idSection);
                    },
                    error: function (xhr, status, error) {
                    }
                });
            });

            function launchChrono() {
                clearInterval(chrono);
                chrono = setInterval(function () {
                    var h = parseInt($('.chrono_h').text());
                    var m = parseInt($('.chrono_m').text());
                    var s = parseInt($('.chrono_s').text());
                    if (s == 0) {
                        console.log("s=0");
                        if (m == 0) {
                            console.log("m=0");
                            if (h == 0) {
                                console.log("h=0");
                                clearInterval(chrono);
                                $('.contentDevoirRess .fileUploader, .alert_duringDevoir, .alert_beforeDownload, .beginDevoir').hide();
                                $('.alert_afterTimeExpire').show();
                                //window.location.href = window.location.href.replace( /[\?#].*|$/, "?idSection="+idSection );
                            } else {
                                var newH = parseInt(h - 1);
                                $('.chrono_h').text(newH);
                                $('.chrono_m').text('59');
                            }
                        } else {
                            var newM = parseInt(m - 1);
                            if (newM < 10) {
                                newM = "0" + newM;
                            }
                            $('.chrono_m').text(newM);
                            $('.chrono_s').text('59');
                        }
                    } else {
                        var newS = parseInt(s - 1);
                        if (newS < 10) {
                            newS = "0" + newS;
                        }
                        $('.chrono_s').text(newS);
                    }
                }, 1000);
            }

            function toJSDate(phpDateTime) {
                var dateTime = phpDateTime.split(" ");//dateTime[0] = date, dateTime[1] = time

                var date = dateTime[0].split("-");
                var time = dateTime[1].split(":");

                return new Date(date[0], (date[1] - 1), date[2], time[0], time[1], 0, 0);
            }

            function formatNum(num) {
                return num < 10 ? '0' + num : '' + num;
            }

            var getUrlParameter = function getUrlParameter(sParam) {
                var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');

                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : sParameterName[1];
                    }
                }
            };
            // on clique sur la section passée en paramètre (si reload de la page)
            if (getUrlParameter("idSection")) {
                $('.ongletSection[data-idsection=' + getUrlParameter("idSection") + '] a').click();
                if (getUrlParameter("idDevoirOpen")) {
                    $('.devoir[data-iditem=' + getUrlParameter("idDevoirOpen") + '] .btnOpenDevoir').click();
                }
            }

            $('.btnUserStatRessource').click(function (e) {
                var ressId = $(this).attr('data-statRessId');
                $.ajax({
                    type: 'POST',
                    url: "{{ path('addUserStatRessource_ajax') }}",
                    async: false,
                    dataType: "json",
                    data: {
                        ressId: ressId
                    },
                    success: function (data) {
                    },
                    error: function (xhr, status, error) {
                    }
                });
            });

            var ressId = $('[data-coursId]').attr('data-coursId');

            // ajoute dans les stats que le user a accédé au chat
            $.ajax({
                type: 'POST',
                url: "{{ path('addUserStatCours_ajax') }}",
                async: false,
                dataType: "json",
                data: {
                    ressId: ressId
                },
                success: function (data) {
                },
                error: function (xhr, status, error) {
                }
            });
        });
    </script>
    {% set hasVisibilityRights = app.user.hasRole('ROLE_SUPER_ADMIN') or ((app.user.statut == 'Responsable' or app.user.statut == 'Formateur') and app.user.confirmedByAdmin) %}

    <div class="container mt-140" data-coursId="{{ cours.id }}" data-folderUpload="{{ folderUpload }}"
         data-uploadSteps="{{ uploadSteps }}" data-uploadSrcSteps="{{ uploadSrcSteps }}"
         data-courseUpload="{{ uploadCourse }}">
        <div class="row">
            <div class="col-sm-4">
                <div class="course-intro">
                    <img src="{{ asset('images/cours/') }}{{ cours.imageFilename }}" class="img-responsive" alt="">
                </div>
            </div>
            <div class="col-sm-8">
                <div class="course-full">
                    <h2 class="heading">{{ cours.nom }}</h2>
                    <div class="personal">
                        <!--<div>
                            <span>Enseignant</span>
                            <span>M. Lefebre <a href="teacher-profile.html"><i class="fa fa fa-user"></i> </a></span>
                        </div>
                        <div>
                        </div>-->
                    </div>
                    <div class="editor">
                        {{ cours.accueil | raw }}
                    </div>
                </div>
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="row mt-40 mb-100">
            <div class="col-sm-3">
                <ul class="nav nav-pills nav-stacked pull-left" role="tablist"
                    style="padding-bottom: 5px;padding-top: 5px">
                    {% for key,val in zonesSections if ((not val.section.isAccesConditionne or (val.section.isAccesConditionne and app.user in val.section.autorizedUsers)) and val.section.isVisible == 1) or hasVisibilityRights %}
                        <li role="presentation" class="ongletSection{% if loop.index == 1 %} active{% endif %} {% if val.section.isVisible == 0 %} visibility_{% endif %}"
                            data-idsection="{{ val.section.id }}">
                            <a href="#t1body{{ val.section.id }}" aria-controls="t1body{{ val.section.id }}" role="tab"
                               data-toggle="tab" aria-expanded="true"><i class="fa {{ val.section.faIcon }} fa-fw"
                                                                         aria-hidden="true"> </i>{{ val.section.nom }}
                            </a>
                        </li>
                    {% endfor %}
                    {% if cours.docsActivated==1 %}
                        <li role="presentation" class="ongletSection">
                            <a href="#sectionDocs" aria-controls="sectionDocs" role="tab" data-toggle="tab"
                               aria-expanded="true"><i class="fa fa-pencil fa-fw" aria-hidden="true"> </i>{% if cours.intituleSharedDocs != "" %}
                                {{ cours.intituleSharedDocs }}
                            {% else %}
                                Documents partagés
                                {% endif %}</a>
                        </li>
                    {% endif %}
                    {% if hasVisibilityRights %}
                        <li role="presentation" class="ongletAdmin">
                            <a href="{{ path('itemUsers', {id:cours.id, type: "cours" }) }}" aria-expanded="true">
                                <i class="fa fa-users fa-fw" aria-hidden="true"> </i>Les inscrits
                            </a>
                        </li>
                    {% endif %}
                </ul>
            </div>
            <div class="col-sm-9">
                <div class="tab-content">
                    {% for key,val in zonesSections if val.section.isVisible or hasVisibilityRights %}
                        <div role="tabpanel" data-idSection="{{ val.section.id }}"
                             class="section tab-pane fade{% if loop.index == 1 %} in active {% endif %} {% if val.section.isVisible == 0 %} visibility_{% endif %}"
                             id="t1body{{ val.section.id }}">
                            <div class="editor">
                                <ul class="list-default">
                                    {% for keyR,valR in val.zones.content %}
                                        {% if val.zones.containers[keyR].isVisible or hasVisibilityRights %}
                                            {% if val.zones.type[keyR] == "lien" %}
                                                <!--
                                                        LIEN
                                                -->
                                                <li data-idZone="{{ val.zones.containers[keyR].id }}"
                                                    class="courseElem lien {% if val.zones.containers[keyR].isVisible == 0 %} visibility_{% endif %}">
                                                    <div class="row">

                                                        <div class="itemInfos itemHeader col-xs-10">
                                                            <div class="itemTitle">{{ valR.nom }}</div>
                                                            <div class="itemDescription">{{ valR.description | raw }}</div>
                                                            {% if '.mp4' in valR.url %}
                                                                <video style="max-width: 600px;" controls>
                                                                    <source src="{{ valR.url }}" type="video/mp4">
                                                                    Votre navigateur ne supporte pas la balise "video".
                                                                </video>
                                                            {% elseif '.mp3' in valR.url %}
                                                                <audio style="max-width: 600px;" controls>
                                                                    <source src="{{ valR.url }}" type="audio/mpeg">
                                                                    Votre navigateur ne supporte pas la balise "audio".
                                                                </audio>
                                                            {% endif %}
                                                        </div>
                                                        <div class="col-xs-2 text-right">
                                                            <a class="btn btnLien btn-sm btn-warning btnUserStatRessource"
                                                               target="_blank"
                                                               href="{{ valR.url }}"
                                                               data-statRessId="{{ valR.id }}"
                                                            >
                                                                {% if valR.typeLien.faIcon is defined %}
                                                                    <i class="fa {{ valR.typeLien.faIcon }}"></i>
                                                                {% else %}
                                                                    <i class="fa fa-external-link"></i>
                                                                {% endif %}
                                                            </a>
                                                        </div>

                                                    </div>


                                                </li>
                                            {% elseif val.zones.type[keyR] == "devoir" %}
                                                <!--
                                                        DEVOIR
                                                -->
                                                <li data-idZone="{{ val.zones.containers[keyR].id }}"
                                                    class="courseElem devoir {% if val.zones.containers[keyR].isVisible == 0 %} visibility_{% endif %}" data-idItem="{{ valR.id }}">
                                                    <div class="">
                                                        <div class="row">
                                                            <div class="itemHeader col-xs-9 mb-10">
                                                                <div class="itemTitle mb-10">
                                                                    {{ valR.nom }}
                                                                </div>
                                                                <div class="ml-10">
                                                                    Du {{ valR.dateDebut|localizeddate('none', 'none', null, null, 'd LLLL Y à H:mm' ) }}
                                                                    au {{ valR.dateFin|localizeddate('none', 'none', null, null, 'd LLLL Y à H:mm' ) }}
                                                                </div>
                                                                <div class="ml-10">
                                                                    Durée : {{ valR.duree//3600 }}
                                                                    h{{ (valR.duree - 3600*(valR.duree//3600))//60 }}min
                                                                </div>
                                                                {% if valR.bareme > 0 %}
                                                                    <div class="ml-10">
                                                                        Barême : Notation sur {{ valR.bareme }}
                                                                        point{% if valR.bareme > 1 %}s{% endif %}
                                                                    </div>
                                                                {% endif %}
                                                                <div class="itemDescription ml-10">
                                                                    {{ valR.description | raw }}
                                                                </div>
                                                            </div>
                                                            {% if mode == "etu" %}
                                                                <!-- On permet d'afficher la popup seulement si la date de fin n'est pas dépassée
                                                                et si la date de début est au moins atteinte
                                                                et si une copie n'a pas encore été déposée
                                                                et si on a pas dépassé le temps alloué -->
                                                                {% set duree = '+' ~ valR.duree ~ 'seconds' %}
                                                                {% if val.zones.copieFichier[keyR] == "undefined"
                                                                    and  "now"|date('Ymd H:i:s') < valR.dateFin|date('Ymd H:i:s')
                                                                    and  "now"|date('Ymd H:i:s') > valR.dateDebut|date('Ymd H:i:s') %}
                                                                    {% if val.zones.copie[keyR] == "undefined" or "now"|date('Ymd H:i:s') < val.zones.copie[keyR].dateCreation|date_modify(duree)|date('Ymd H:i:s') %}
                                                                        <div class="col-xs-3 text-right conteneurLiensSujets">
                                                                            <div class="btn btn-sm btn-info btnOpenDevoir">
                                                                                Entrer
                                                                            </div>
                                                                            <div class="listeSujets">
                                                                                {% for keyS,valS in val.zones.sujet[keyR] %}
                                                                                    <a class="btn btn-sm btn-info mb-3 hidden"
                                                                                       target="_blank"
                                                                                       href="{{ valS.url }}">{{ valS.nom }}</a>
                                                                                {% endfor %}
                                                                            </div>
                                                                        </div>
                                                                    {% endif %}
                                                                {% endif %}
                                                            {% endif %}
                                                        </div>
                                                        {% if mode == "etu" %}
                                                            {% if val.zones.copie[keyR] != "undefined" or "now"|date('Ymd H:i:s') > valR.dateFin|date('Ymd H:i:s') %}
                                                                <!-- On affiche les fichiers (sujet, copie, corrigé) que si le user
                                                                     a déjà déposé une copie ou si la date de fin est dépassée-->
                                                                <table class="devoirCptRenduTable">
                                                                    <tr>
                                                                        <td>Sujet du devoir</td>
                                                                        <td>
                                                                            {% for keyS,valS in val.zones.sujet[keyR] %}
                                                                                <a class="btn btn-sm btn-info mb-3 btnUserStatRessource"
                                                                                   target="_blank"
                                                                                   href="{{ valS.url }}"
                                                                                   data-statRessId="{{ valR.id }}"
                                                                                >{{ valS.nom }}</a>
                                                                            {% endfor %}
                                                                        </td>
                                                                    </tr>
                                                                    {% if (val.zones.corrigeType[keyR] != "undefined" and "now"|date('Ymd H:i:s') > valR.dateFin|date('Ymd H:i:s')) %}
                                                                        <tr>
                                                                            <td>Corrigé type du devoir</td>
                                                                            <td>
                                                                                {% for keyC,valC in val.zones.corrigeType[keyR] %}
                                                                                    <a class="btn btn-sm btn-success mb-3"
                                                                                       target="_blank"
                                                                                       href="{{ valC.url }}">{{ valC.nom }}</a>
                                                                                {% endfor %}
                                                                            </td>
                                                                        </tr>
                                                                    {% endif %}
                                                                    {% if val.zones.copie[keyR] != "undefined" %}
                                                                        <tr>
                                                                            <td>Devoir commencé
                                                                                le {{ val.zones.copie[keyR].dateCreation|localizeddate('none', 'none', 'fr', null, 'd LLLL Y à H:mm' ) }}</td>
                                                                            <td>
                                                                                {% if val.zones.copieFichier[keyR] != "undefined" %}
                                                                                    <a class="btn btn-sm btn-warning"
                                                                                       target="_blank"
                                                                                       href="{{ val.zones.copieFichier[keyR].url }}">Ma
                                                                                        copie</a>
                                                                                    {% if "now"|date('Ymd H:i:s') < val.zones.copie[keyR].dateCreation|date_modify(duree)|date('Ymd H:i:s') %}
                                                                                        <div class="btn btn-sm btn-danger btnDeleteCopieEtu">
                                                                                            Effacer ma copie
                                                                                        </div>
                                                                                    {% endif %}
                                                                                {% endif %}
                                                                            </td>
                                                                        </tr>
                                                                        {% if val.zones.copieFichier[keyR] != "undefined" %}
                                                                            <tr>
                                                                                <td>

                                                                                </td>
                                                                                <td>
                                                                                    {{ valR.commentaireCopieRendue | raw }}
                                                                                </td>
                                                                            </tr>
                                                                        {% endif %}
                                                                    {% endif %}
                                                                    {% if val.zones.corrige[keyR] != "undefined" %}
                                                                        <tr>
                                                                            <td>Corrigé déposé
                                                                                le {{ val.zones.corrige[keyR].dateRendu|localizeddate('none', 'none', null, null, 'd LLLL Y à H:mm' ) }}</td>
                                                                            <td>
                                                                                {% if val.zones.corrigeFichier[keyR] != "undefined" %}
                                                                                    <a class="btn btn-sm btn-success"
                                                                                       target="_blank"
                                                                                       href="{{ val.zones.corrigeFichier[keyR].url }}">Ma
                                                                                        copie corrigée</a>
                                                                                {% endif %}
                                                                            </td>
                                                                        </tr>
                                                                    {% endif %}
                                                                    {% if val.zones.copie[keyR] != "undefined" %}

                                                                        {% if val.zones.copie[keyR].note %}
                                                                            <tr class="itemTitle">
                                                                                <td>
                                                                                    Note obtenue
                                                                                <td>
                                                                                    {{ val.zones.copie[keyR].note }}
                                                                                    / {{ valR.bareme }}
                                                                                </td>
                                                                            </tr>
                                                                        {% endif %}
                                                                    {% endif %}
                                                                </table>
                                                            {% endif %}
                                                        {% elseif mode == 'ens' %}
                                                            <table class="devoirCptRenduTable">
                                                                <tr>
                                                                    <td>Sujet du devoir</td>
                                                                    <td>
                                                                        {% for keyS,valS in val.zones.sujet[keyR] %}
                                                                            <a class="btn btn-sm btn-info mb-3"
                                                                               target="_blank"
                                                                               href="{{ valS.url }}">{{ valS.nom }}</a>
                                                                        {% endfor %}
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Corrigé type du devoir</td>
                                                                    <td>
                                                                        {% for keyC,valC in val.zones.corrigeType[keyR] %}
                                                                            <a class="btn btn-sm btn-success mb-3"
                                                                               target="_blank"
                                                                               href="{{ valC.url }}">{{ valC.nom }}</a>
                                                                        {% endfor %}
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>{{ val.zones.corrigesDeposes[keyR] }} copies
                                                                        corrigée{% if val.zones.corrigesDeposes[keyR]>1 %}s{% endif %}
                                                                        sur {{ val.zones.copiesDeposes[keyR] }}
                                                                        déposée{% if val.zones.copiesDeposes[keyR]>1 %}s{% endif %}</td>
                                                                    <td>
                                                                        <a class="btn btn-sm btn-danger mb-3 btnOpenDevoirEns"
                                                                           href="{{ path('oneDevoirEns', {id: valR.id}) }}">Afficher</a>
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                        {% endif %}
                                                    </div>

                                                </li>
                                            {% elseif val.zones.type[keyR] == "groupe" %}
                                                <!--
                                                        GROUPE
                                                -->
                                                <li data-idZone="{{ val.zones.containers[keyR].id }}"
                                                    class="courseElem groupsRessource {% if val.zones.containers[keyR].isVisible == 0 %} visibility_{% endif %}">
                                                    <div class="row">
                                                        <div class="itemInfos itemHeader col-xs-10">
                                                            <div class="itemTitle">{{ val.zones.groupe[keyR].nom }}</div>
                                                            <div class="itemDescription">{{ val.zones.groupe[keyR].description | raw }}</div>
                                                        </div>
                                                        <div class="col-xs-12 {% if not val.zones.groupe[keyR].isVertical %}text-right{% endif %}">
                                                            {% for keyG,valG in val.zones.content[keyR] %}
                                                                {% if '.mp4' in valG.lien.url %}
                                                                    <div class="blocMedia">
                                                                        <video controls>
                                                                            <source src="{{ valG.lien.url }}"
                                                                                    type="video/mp4">
                                                                            Votre navigateur ne supporte pas la balise
                                                                            "video".
                                                                        </video>
                                                                    </div>
                                                                {% else %}
                                                                    {% if val.zones.groupe[keyR].isVertical %}
                                                                        <div class="verticalGrLienElem">
                                                                    {% endif %}
                                                                    <a class="btnLienGroupeRessource btn btn-xs btnUserStatRessource"
                                                                       style="background-color: {{ valG.categorieLien.couleur }};"
                                                                       target="_blank"
                                                                       href="{{ valG.lien.url }}"
                                                                       data-statRessId="{{ val.zones.groupe[keyR].id }}"
                                                                    >
                                                                        {% if valG.lien.typeLien.faIcon is defined %}
                                                                            <i class="fa {{ valG.lien.typeLien.faIcon }}"></i>
                                                                        {% else %}
                                                                            <i class="fa fa-external-link"></i>
                                                                        {% endif %}
                                                                        {{ valG.nom }}
                                                                    </a>
                                                                    {% if val.zones.groupe[keyR].isVertical %}
                                                                        </div>
                                                                    {% endif %}

                                                                {% endif %}

                                                            {% endfor %}
                                                        </div>
                                                    </div>
                                                </li>
                                            {% elseif val.zones.type[keyR] == "forum" %}
                                                <!--
                                                        FORUM
                                                -->
                                                <li data-idZone="{{ val.zones.containers[keyR].id }}"
                                                    class="courseElem forum {% if val.zones.containers[keyR].isVisible == 0 %} visibility_{% endif %}">
                                                    <div class="row">

                                                        <div class="itemInfos itemHeader col-xs-10">
                                                            <div class="itemTitle">{{ valR.nom }}</div>
                                                            <div class="itemDescription">{{ valR.description | raw }}</div>
                                                        </div>

                                                        <div class="col-xs-2 text-right">
                                                            <a class="btn btnLien btn-sm btn-warning"
                                                               href="{{ path('forum', {id: valR.id}) }}"
                                                            >
                                                                <i class="fa fa-users" aria-hidden="true"></i>
                                                            </a>
                                                        </div>
                                                    </div>


                                                </li>
                                            {% elseif val.zones.type[keyR] == "chat" %}
                                                <!--
                                                        CHAT
                                                -->
                                                <li data-idZone="{{ val.zones.containers[keyR].id }}"
                                                    class="courseElem chat {% if val.zones.containers[keyR].isVisible == 0 %} visibility_{% endif %}">
                                                    <div class="row">

                                                        <div class="itemInfos itemHeader col-xs-10">
                                                            <div class="itemTitle">{{ valR.nom }}</div>
                                                            <div class="itemDescription">{{ valR.description | raw }}</div>
                                                        </div>
                                                        {% if valR.enabled or app.user in valR.administrateurs or app.user.hasRole('ROLE_SUPER_ADMIN') %}
                                                            <div class="col-xs-2 text-right">
                                                                <a class="btn btnLien btn-sm btn-warning"
                                                                   href="{{ path('chat', {id: valR.id}) }}">
                                                                    <i class="fa fa-comments-o" aria-hidden="true"></i>
                                                                </a>
                                                            </div>
                                                        {% endif %}
                                                    </div>


                                                </li>
                                            {% elseif val.zones.type[keyR] == "libre" %}
                                                <!--
                                                        LIBRE
                                                -->
                                                <li data-idZone="{{ val.zones.containers[keyR].id }}"
                                                    class="courseElem freeRessource {% if val.zones.containers[keyR].isVisible == 0 %} visibility_{% endif %}">
                                                    <div class="">{{ val.zones.content[keyR].description | raw }}</div>
                                                </li>
                                            {% endif %}
                                            <hr class="mt-10 mb-10"/>
                                        {% endif %}
                                    {% endfor %}
                                </ul>
                            </div>
                        </div>
                    {% endfor %}
                    <div role="tabpanel" class="tab-pane fade" id="sectionDocs">
                        {% if cours.docsActivated==1 %}
                            <div class="course-list documentsDisc" data-activated="{{ cours.docsActivated }}"
                                 style="margin-top: 0;">
                                <div class="course-media text-center mt-10">
                                    <i class="fa fa-file-o fa-3" aria-hidden="true"></i>
                                </div>
                                <div class="course-detail">
                                    <h4 class="heading">{% if cours.intituleSharedDocs != "" %}
                                            {{ cours.intituleSharedDocs }}
                                        {% else %}
                                            Mes documents partagés
                                        {% endif %}</h4>
                                    {% if nbNewDocs != 0 %}
                                        <p class="newDocsP"><span class="newDocsPuce">{{ nbNewDocs }}</span> nouveaux
                                            documents</p>
                                    {% endif %}
                                    <div class="resumeDocs mt-20 col-xs-12">
                                        <a href="{{ path('courseDocs', {id: cours.id}) }}"
                                           class="btn btn-primary btn-sm">Accéder</a>
                                    </div>
                                </div>
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span>
                </button>

                <!--                  POPUP DEVOIR ELEVE                     -->

                <div class="modal-body" data-contentModal="devoirDisplay" data-idItem=""
                     style="background:#aaa; background-size:cover">
                    <div class="row">
                        <div class="bginverse">
                            <div class="">
                                <div class="popupDevoirNom"></div>
                                <div class="popupDevoirDescription mb-10"></div>

                                <div class="alert alert-info mb-10 alert_notime">
                                    Ce devoir n'est pas chronométré.
                                    <p>Vous disposerez alors de tout le temps que vous estimez nécessaire pour déposer votre copie.</p>
                                </div>
                                <div class="alert alert-danger mb-10 alert_beforeDownload">
                                    <strong>Attention!</strong> Lors du click sur "commencer", le chronomètre du devoir
                                    sera lancé.
                                    <p>Vous disposerez alors de <span class="popupDevoirDuree"></span> pour rendre vos
                                        fichiers.</p>
                                </div>

                                <div class="alert alert-danger mb-10 alert_duringDevoir">
                                    <strong>Attention!</strong> Vous avez déjà commencé ce devoir.
                                    <p>Le temps restant s'affiche en bas de cette popup.</p>
                                </div>

                                <div class="alert alert-danger mb-10 alert_afterTimeExpire">
                                    <strong>Attention!</strong> Vous avez atteint la limite fixée pour ce devoir, qui
                                    était fixée à <span class="popupDevoirDuree"></span>.
                                </div>

                                <div class="row mb-10" style="text-align: center">
                                    <div class="btn btn-sm btn-info mb-3 beginDevoir">Commencer</div>
                                </div>
                                <div class="contentDevoirRess">
                                    <div class="masqueDevoir"></div>

                                    <div class="listeDevoirSujets col-sm-6 col-xs-12">
                                        Fichiers de sujet :
                                    </div>

                                    <div class="fileUploader col-sm-6 col-xs-12">
                                        <span class="btn btn-success fileinput-button">
                                            <i class="glyphicon glyphicon-plus"></i>
                                            <span>Déposer ma copie</span>
                                            <input id="copieUpload" type="file" name="files[]" multiple>
                                        </span>

                                        <div id="itemProgress" class="progress col-xs-12">
                                            <div class="progress-bar progress-bar-success"></div>
                                        </div>
                                        <div class="">
                                            Fichiers acceptés : PDF, WORD (5MO maximum)
                                        </div>
                                    </div>

                                    <div class="chronometre">
                                        <span class="chrono_elem chrono_h"></span>:<span
                                                class="chrono_elem chrono_m"></span>:<span class="chrono_elem chrono_s">00</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}