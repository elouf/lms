<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Cohorte;
use AppBundle\Entity\Inscription_coh;

/**
 * CohorteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CohorteRepository extends \Doctrine\ORM\EntityRepository
{
    public function findInscrits($cohorte)
    {
        $em = $this->getEntityManager();

        $users = array();

        $inscrCohs = $em->getRepository('AppBundle:Inscription_coh')->findBy(array('cohorte' => $cohorte));
        if($inscrCohs){
            foreach($inscrCohs as $inscrCoh){
                $inscrUser = $inscrCoh->getUser();
                if(!in_array($inscrUser, $users) && $inscrUser->isEnabled()){
                    array_push($users, $inscrUser);
                }
            }
        }
        return $inscrCohs;
    }

    public function getUsersInscr($cohorte){
        $em = $this->getEntityManager();
        $inscs = $em->getRepository('AppBundle:Inscription_coh')->findBy(array('cohorte' => $cohorte));
        $users = [];
        if($inscs){
            /* @var $insc Inscription_coh */
            foreach ($inscs as $insc){
                $user = $insc->getUser();
                if(!in_array($insc, $users) && $user->isEnabled()) {
                    array_push($users, $user);
                }
            }
        }
        return $users;
    }

    public function userIsInscrit($user, $coh)
    {
        return $this->getUserInscr($user, $coh)!=null;
    }

    public function getUserInscr($user, $coh){
        $em = $this->getEntityManager();

        $insc = $em->getRepository('AppBundle:Inscription_coh')->findOneBy(array('cohorte' => $coh, 'user' => $user));
        return $insc;
    }

    public function userHasAccessOrIsInscrit($user, $coh)
    {
        return $this->userIsInscrit($user, $coh);
    }

    public function allForUser($user)
    {
        $em = $this->getEntityManager();

        $inscs = $em->getRepository('AppBundle:Inscription_coh')->findBy(array('user' => $user));

        $cohs = array();
        if($inscs){
            foreach($inscs as $insc){
                $coh = $insc->getCohorte();
                if(!in_array($coh, $cohs)){
                    array_push($cohs, $coh);
                }
            }
        }

        return $cohs;
    }

    public function getRole($user, $item)
    {
        $em = $this->getEntityManager();

        $inscr = $em->getRepository('AppBundle:Inscription_coh')->findOneBy(array('cohorte' => $item, 'user' => $user));
        if($inscr){
            return $inscr->getRole();
        }
        return null;
    }

    public function getLinkedCourses(Cohorte $cohorte)
    {
        $em = $this->getEntityManager();

        $courses = $cohorte->getCours();
        $discs = $cohorte->getDisciplines();
        if($discs){
            $repositoryCours = $em->getRepository('AppBundle:Cours');
            foreach ($discs as $disc){
                $cours_arr = $repositoryCours->findBy(array('discipline' => $disc));
                if($cours_arr) {
                    foreach ($cours_arr as $cours) {
                        if(!$courses->contains($cours)){
                            $courses->add($cours);
                        }
                    }
                }
            }
        }
        return $courses;
    }
}
